Promise:
========

    -> "I Promise a Result!"

    -> "Producing code" is code that can take some time

    -> "Consuming code" is code that must wait for the result

    -> A Promise is a JavaScript object that links producing code and consuming code

Promise Syntax:
===============
    let myPromise = new Promise(function(myResolve, myReject) {
    // "Producing Code" (May take some time)

    myResolve(); // when successful
    myReject();  // when error
    });

    // "Consuming Code" (Must wait for a fulfilled Promise)
    myPromise.then(
    function(value) { /* code if successful */ },
    function(error) { /* code if some error */ }
    );


Example:
========
    function myDisplayer(some) {
        document.getElementById("demo").innerHTML = some;
    }

    let myPromise = new Promise(function(myResolve, myReject) {
        let x = 0;

        if (x == 0) {
            myResolve("OK");
        } else {
            myReject("Error");
        }
    });

    myPromise.then(
        function(value) {
            myDisplayer(value);      //OK
        },
        function(error) {
            myDisplayer(error);     //Error
        }
    );


Example Using Callback:
=======================
    setTimeout(function() 
    { 
        myFunction("I love You !!!"); 
    }, 3000);


    function myFunction(value) {
        document.getElementById("demo").innerHTML = value;
    }

Example Using Promise:
======================
    let myPromise = new Promise(function(myResolve, myReject) {
        setTimeout(function() 
        { 
            myResolve("I love You !!"); 
        }, 3000);
    });


    myPromise.then(function(value) {
        document.getElementById("demo").innerHTML = value;    //I love You !!
    });